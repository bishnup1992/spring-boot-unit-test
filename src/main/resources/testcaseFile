package com.example.demo;

import static org.mockito.Mockito.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.core.env.Environment;

import static org.junit.jupiter.api.Assertions.*;

public class ConfigPropertiesTest {

    @Mock
    private Environment environment;

    private ConfigProperties configProperties;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this);

        // Mock the environment properties
        when(environment.getProperty("frs.base-url")).thenReturn("http://example.com");
        when(environment.getProperty("frs.create-fragment-api")).thenReturn("/api/createFragment");
        when(environment.getProperty("frs.update-fragment-api")).thenReturn("/api/updateFragment");

        // Initialize ConfigProperties
        configProperties = new ConfigProperties();

        // Manually set properties from the mocked environment
        configProperties.setBaseUrl(environment.getProperty("frs.base-url"));
        configProperties.setCreateFragmentApi(environment.getProperty("frs.create-fragment-api"));
        configProperties.setUpdateFragmentApi(environment.getProperty("frs.update-fragment-api"));
    }

    @Test
    public void testConfigProperties() {
        assertNotNull(configProperties);
        assertEquals("http://example.com", configProperties.getBaseUrl());
        assertEquals("/api/createFragment", configProperties.getCreateFragmentApi());
        assertEquals("/api/updateFragment", configProperties.getUpdateFragmentApi());
    }
}
